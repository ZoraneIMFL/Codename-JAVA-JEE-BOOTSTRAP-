plugins {
    id 'java'
	id 'war'
	id "org.sonarqube" version "3.0"

}

apply plugin: 'war'
apply from: 'https://raw.github.com/gretty-gradle-plugin/gretty/master/pluginScripts/gretty.plugin'


repositories{
    mavenCentral()
    mavenLocal()
    jcenter()
}







dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.1'
	testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.1'
	testImplementation 'org.apache.derby:derby:10.15.2.0'

	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
	implementation 'org.apache.derby:derbyshared:10.15.2.0'
	implementation 'org.apache.derby:derbytools:10.15.2.0'
	//implementation 'org.java-websocket:Java-WebSocket:1.5.3'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	//implementation 'org.apache.taglibs:taglibs-standard-impl:1.2.5'
	implementation 'jakarta.websocket:jakarta.websocket-api:2.0.0'
	implementation 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.1.0'
	implementation 'org.eclipse.jetty:apache-jsp:11.0.13'


}

task copySettingsGradle {
	doFirst {
		ant.copy(file: 'settings.gradle',
				todir: 'src/main/resources',
				overwrite: true,
				failonerror: true)
	}
}
classes.dependsOn copySettingsGradle

war{
	webAppDirectory = file('src/main/webapp')
}


test {
    // Use junit platform for unit tests.
    useJUnitPlatform()
    include '/Test.class'
    testLogging {
        events "passed", "skipped", "failed", "standardOut"
    }
}
